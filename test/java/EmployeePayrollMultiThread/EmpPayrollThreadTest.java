/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package EmployeePayrollMultiThread;

import java.time.Duration;
import java.time.Instant;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.blz.employeepayrollsql.controller.EmpPayrollThreadMain;
import com.blz.employeepayrollsql.controller.EmpPayrollThreadMain.IOService;
import com.blz.employeepayrollsql.model.CustomThreadException;

public class EmpPayrollThreadTest {
	private static Logger log = Logger.getLogger(EmpPayrollThreadTest.class.getName());
	EmpPayrollThreadMain empPayrollThreadObj = null;

	// Using table employee_payroll and payroll_details from payroll_service DB
	@Before
	public void setUp() {
		empPayrollThreadObj = new EmpPayrollThreadMain();
	}

	@Test
	public void givenNewSalariesForMultipleEmployee_WhenUpdated_ShouldSyncWithDB() throws CustomThreadException {
		empPayrollThreadObj.readEmployeePayrollData(IOService.DB_IO);
		Map<String, Double> employeeSalaryMap = new HashMap<>();
		Instant threadStart = Instant.now();
		employeeSalaryMap.put("Deeksha", 3000000.00);
		employeeSalaryMap.put("Bill", 2000000.00);
		employeeSalaryMap.put("Natasha", 5000000.00);
		empPayrollThreadObj.updateSalaryOfMultipleEmployees(employeeSalaryMap);
		Instant threadEnd = Instant.now();
		log.info("Duartion with Thread : " + Duration.between(threadStart, threadEnd));
		boolean result1 = empPayrollThreadObj.checkEmployeePayrollInSyncWithDB("Bill");
		boolean result2 = empPayrollThreadObj.checkEmployeePayrollInSyncWithDB("Natasha");
		Assert.assertTrue(result1);
		Assert.assertTrue(result2);
	}

}
